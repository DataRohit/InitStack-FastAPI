volumes:
    dicebear-data:
        name: dicebear-data
        driver: local
    sonarqube_temp:
        name: sonarqube_temp
        driver: local
    sonarqube_data:
        name: sonarqube_data
        driver: local
    sonarqube_logs:
        name: sonarqube_logs
        driver: local
    sonarqube_extensions:
        name: sonarqube_extensions
        driver: local

services:
    dicebear-service:
        build:
            context: .
            dockerfile: ./compose/dicebear/dockerfile
        image: dicebear-service:latest
        container_name: dicebear-service
        volumes:
            - dicebear-data:/var/lib/dicebear
        networks:
            - initstack
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD",
                    "curl",
                    "-f",
                    "http://localhost:3000/9.x/avataaars/svg?seed=John%20Doe&accessories[]&eyebrows=default,defaultNatural&eyes=default,happy,squint&mouth=default,smile",
                ]
            interval: 1m30s
            timeout: 30s
            retries: 5
            start_period: 30s

    sonarqube-service:
        image: sonarqube:latest
        container_name: sonarqube-service
        ports:
            - "9000:9000"
        env_file:
            - ./.envs/sonarqube/.env
        volumes:
            - sonarqube_temp:/opt/sonarqube/temp
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_logs:/opt/sonarqube/logs
            - sonarqube_extensions:/opt/sonarqube/extensions
        networks:
            - initstack
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000"]
            interval: 1m30s
            timeout: 30s
            retries: 5
            start_period: 30s

networks:
    initstack:
        name: initstack
        driver: bridge
